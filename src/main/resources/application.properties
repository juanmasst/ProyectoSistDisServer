# Application
spring.application.name=forum-server
server.port=8081

# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/forum_db
spring.datasource.username=postgres
spring.datasource.password=root
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Auth0 Configuration para el SERVIDOR (API Backend)
# Reemplaza con tus valores reales de Auth0:

# 1. AUDIENCE: Identificador de tu API en Auth0 (NO es la URL del frontend)
auth0.audience=https://proyectosistdis-server
# Ejemplo: auth0.audience=https://mi-forum-api

# 2. ISSUER: Tu dominio de Auth0 (donde se emiten los tokens)
auth0.issuer=https://dev-66qo15jox04h0mv5.us.auth0.com/

# 3. JWK Set URI: Para validar las firmas de los tokens
auth0.jwk-set-uri=https://dev-66qo15jox04h0mv5.us.auth0.com/.well-known/jwks.json

# NO necesitas client-id ni client-secret en el servidor para validar tokens

# Swagger/OpenAPI Configuration
springdoc.api-docs.path=/api/v3/api-docs
springdoc.swagger-ui.path=/api/swagger-ui.html
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.try-it-out-enabled=true

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
file.upload.path=./uploads/

# CORS Configuration
cors.allowed-origins=http://localhost:3000,http://localhost:5173
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=*

# Logging
logging.level.com.sistDistribuidos=DEBUG
logging.level.org.springframework.security=DEBUG
